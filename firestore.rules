rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    
    // Helper function to check if user is admin
    function isAdmin() {
      return request.auth != null && 
             exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
             get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }
    
    // ===== EXISTING COLLECTIONS =====
    
    match /users/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
      allow read: if isAdmin(); // Admins can read all users
    }
    
    match /detailers/{detailerId} {
      allow read: if true;
      allow write: if request.auth != null;
    }
    
    match /bookings/{bookingId} {
      allow read, write: if request.auth != null && request.auth.uid == resource.data.userId;
      allow create: if request.auth != null && request.auth.uid == request.resource.data.userId;
      allow read: if isAdmin();
    }
    
    // ===== NEW MARKETPLACE COLLECTIONS =====
    
    // Waitlist - anyone can JOIN, only admins can READ
    match /waitlist/{document} {
      allow create: if true; // Anyone can join waitlist
      allow read, delete, update: if isAdmin(); // Only admins can see/manage waitlist data
    }
    
    // Provider applications - anyone can apply, only admins can see
    match /providerApplications/{applicationId} {
      allow create: if true; // Anyone can apply
      allow read, update, delete: if isAdmin(); // Only admins can review/manage
    }
    
    // Provider profiles - public can browse, providers can edit own
    match /providers/{providerId} {
      allow read: if true; // Public can browse providers
      allow create: if request.auth != null; // Authenticated users can create provider applications
      allow write: if request.auth != null && request.auth.uid == providerId;
      allow read, update: if request.auth != null && 
        (resource.data.userId == request.auth.uid || isAdmin()); // Users can read their own applications, admins can read all
    }
    
    // Customer profiles
    match /customers/{customerId} {
      allow read, write: if request.auth != null && request.auth.uid == customerId;
      allow read: if isAdmin();
    }
    
    // Marketplace bookings
    match /marketplaceBookings/{bookingId} {
      allow read, write: if request.auth != null && 
                     (request.auth.uid == resource.data.customerId || 
                      request.auth.uid == resource.data.providerId);
      allow create: if request.auth != null;
      allow read, update: if isAdmin();
    }
    
    // Reviews - public can read, customers can write
    match /reviews/{reviewId} {
      allow read: if true;
      allow create: if request.auth != null;
      allow update, delete: if request.auth != null && request.auth.uid == resource.data.customerId;
      allow write: if isAdmin();
    }
  }
}
