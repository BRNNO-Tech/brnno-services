rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Users collection - users can read/write their own data, admins can read all
    match /users/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
      allow read: if request.auth != null && 
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }
    
    // Providers collection - authenticated users can create, read approved providers
    match /providers/{providerId} {
      allow create: if request.auth != null;
      allow read: if request.auth != null && 
        (resource.data.status == 'approved' || 
         resource.data.userId == request.auth.uid ||
         get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin');
      allow update: if request.auth != null && 
        (resource.data.userId == request.auth.uid ||
         get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin');
    }
    
    // Bookings collection - users can create bookings, providers can read their bookings
    match /bookings/{bookingId} {
      allow create: if request.auth != null;
      allow read, update: if request.auth != null && 
        (resource.data.customerId == request.auth.uid ||
         resource.data.providerId == request.auth.uid ||
         get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin');
    }
    
    // Waitlist collection - anyone can create, admins can read all
    match /waitlist/{waitlistId} {
      allow create: if true;
      allow read: if request.auth != null && 
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }
  }
}
